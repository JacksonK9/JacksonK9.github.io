<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Algorithms on TIL the END</title>
    <link>https://JacksonK9.github.io/algorithm/</link>
    <description>Recent content in Algorithms on TIL the END</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 26 Sep 2022 20:44:24 +0900</lastBuildDate><atom:link href="https://JacksonK9.github.io/algorithm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2022 현대 모비스 알고리즘 경진 대회 예선 문제 리뷰</title>
      <link>https://JacksonK9.github.io/algorithm/hyundai_mobis_algorithm_contest_2022_preliminary/</link>
      <pubDate>Mon, 26 Sep 2022 20:44:24 +0900</pubDate>
      
      <guid>https://JacksonK9.github.io/algorithm/hyundai_mobis_algorithm_contest_2022_preliminary/</guid>
      
        <description>Problem  예선 문제 Dead or Arrive 주차 시스템 ADAS 시스템 생산공정 도로망 설계   Table of Contents  공통 사항 Dead or Arrive 설명 Dead or Arrive 풀이 주차 시스템 설명 주차 시스템 풀이 ADAS 시스템 설명 ADAS 시스템 풀이 Review   공통 사항  Python3 기준, 수행시간은 10초 이에 따라, 계산 가능한 최대 횟수는 약 2억번   Dead or Arrive 설명  각 차량은 v의 속도와 w의 내구도를 가짐 속도가 다른 차량은 모두 결승선 통과 속도가 같은 경우, 내구도가 가장 높은 차량만 결승선을 통과 속도와 내구도가 모두 같은 경우, 차량 번호가 가장 큰 차량만 결승선 통과 첫 번째 줄에 차량의 숫자 N이 입력 두 번째 줄부터 N줄만큼 각 차량의 v, w가 주어진다.</description>
      
    </item>
    
    <item>
      <title>소프티어 4차 인증평가 문제 풀이</title>
      <link>https://JacksonK9.github.io/algorithm/softeer_4th_certification_test/</link>
      <pubDate>Sun, 25 Sep 2022 20:37:32 +0900</pubDate>
      
      <guid>https://JacksonK9.github.io/algorithm/softeer_4th_certification_test/</guid>
      
        <description>Problem  슈퍼컴퓨터 클러스터 통근버스 출발 순서 검증하기 참고 자료 - 알골 선생  Table of Contents  슈퍼컴퓨터 클러스터 설명 슈퍼컴퓨터 클러스터 풀이 통근버스 출발 순서 검증하기 설명 통근버스 출발 순서 검증하기 풀이 Review   슈퍼컴퓨터 클러스터 설명  문제가 꽤 깁니다&amp;hellip;만 아무튼 요약하자면 다음과 같습니다.</description>
      
    </item>
    
    <item>
      <title>Python *, zip, join</title>
      <link>https://JacksonK9.github.io/algorithm/python_algorithm_tip_1/</link>
      <pubDate>Mon, 08 Aug 2022 00:05:38 +0900</pubDate>
      
      <guid>https://JacksonK9.github.io/algorithm/python_algorithm_tip_1/</guid>
      
        <description>참고 원본 - 파이썬의 Asterisk(*) 이해하기 참고 원본 - Python zip 참고 원본 - Python join Table of Contents  Python * Python zip Python join Review   Python * 연산자  * 연산자는 C 또는 C++에서는 Pointer를 나타낼 때 사용하거나 곱하기를 계산할 때 사용하는 경우가 일반적이다.</description>
      
    </item>
    
    <item>
      <title>2022년도 현대모비스 코딩 테스트 유사 문제</title>
      <link>https://JacksonK9.github.io/algorithm/hyundai_mobis_similar_problem/</link>
      <pubDate>Sun, 07 Aug 2022 22:49:51 +0900</pubDate>
      
      <guid>https://JacksonK9.github.io/algorithm/hyundai_mobis_similar_problem/</guid>
      
        <description>Problem  설탕 배달 평균 네 수 단어의 개수 회전 초밥  Table of Contents  설탕 배달 문제 설탕 배달 풀이 1 설탕 배달 풀이 2 평균 문제 평균 문제 풀이 네 수 문제 네 수 문제 풀이 단어의 개수 문제 단어의 개수 문제 풀이 회전 초밥 문제 회전 초밥 문제 풀이 Review   설탕 배달 (BOJ 2839)  3kg, 5kg의 설탕 봉지가 있음 특정 무게의 봉지를 들고 갈 때, 봉지의 개수를 최소화하고 싶음 얼핏보면 Greedy Algorithm을 적용하면 되지 않나?</description>
      
    </item>
    
    <item>
      <title>카카오 모빌리티 및 우아한형제들 코딩테스트 리뷰</title>
      <link>https://JacksonK9.github.io/algorithm/k_h_company_coding_test_review/</link>
      <pubDate>Sun, 07 Aug 2022 22:25:53 +0900</pubDate>
      
      <guid>https://JacksonK9.github.io/algorithm/k_h_company_coding_test_review/</guid>
      
        <description>Table of Contents  카카오 모빌리티 리뷰 우아한형제들 Review   카카오모빌리티 코딩테스트 리뷰  카카오 모빌리티 자율주행 S/W 엔지니어 (R &amp;amp; D)로 지원 2시간 15분 / 3문제 C, C++, Python 중 선택해서 진행 가능 Codility에서 테스트를 진행하며, 영어, 한글 모두 선택이 가능 문제는 일반적인 구현, 반례 찾기 문제가 출제 난이도는 2시간 15분 기준, 문제 풀이에는 약 1시간 정도, 30분 정도는 테스트를 할 정도의 난이도 특징으로는 문제의 시간 복잡도나 공간 복잡도를 고려하기 보다는, 정답이 맞냐 틀리냐에 초점을 맞춰서 풀면 된다는 점   우아한형제들 코딩테스트 리뷰  우아한형제들의 경우 로보틱스LAB팀 로봇 소프트웨어 엔지니어로 지원 3시간 / 4문제 마찬가지로 Codility에서 테스트 진행하였지만, 영어만 사용 가능 C, C++, Python, Java 등 더 다양한 언어를 지원 문제는 일반적인 구현, 반례 찾기, 코드 디버깅 문제가 출제 난이도는 3시간 기준, 문제 풀이에는 1시간 30분 정도, 30분 정도는 테스트를 할 정도의 난이도 문제의 시간 복잡도를 함께 고려하여 문제를 맞춰야하며, 효율을 따지는 편   Review  코딩테스트를 보는 플랫폼이 동일해서 그런지, 문제 스타일이 비슷했던 것으로 보임 카모에 비해 우형의 경우 문제 효율을 함께 따져야해서 조금 더 까다롭다는 느낌을 받음 우형의 경우 실제 사례에 조금 더 근접한 일반 공학을 아는 정도면 쉽게 구현할 수 있는 정도의 문제도 출제됨 아직 결과가 나오지 않아서, 문제를 맞추었는지 틀렸는지도 모르겠지만&amp;hellip; 느낌은 그렇습니다.</description>
      
    </item>
    
    <item>
      <title>최소 공통 조상 알고리즘</title>
      <link>https://JacksonK9.github.io/algorithm/lowest_common_ancestor_algorithm/</link>
      <pubDate>Sun, 05 Jun 2022 21:01:37 +0900</pubDate>
      
      <guid>https://JacksonK9.github.io/algorithm/lowest_common_ancestor_algorithm/</guid>
      
        <description>참고 원본 - 최소 공통 조상 알고리즘 10분 정복 BOJ 11437 LCA 문제 BOJ 11438 LCA 2 문제 Table of Contents  최소 공통 조상 문제 기본 최소 공통 조상 알고리즘 심화 최소 공통 조상 알고리즘 Review   최소 공통 조상 문제  Lowest Common Ancestor의 줄임말로 LCA문제라고도 한다.</description>
      
    </item>
    
    <item>
      <title>구간합 (feat. Prefix Sum, Binary Indexed Tree)</title>
      <link>https://JacksonK9.github.io/algorithm/interval_sum/</link>
      <pubDate>Fri, 03 Jun 2022 21:59:26 +0900</pubDate>
      
      <guid>https://JacksonK9.github.io/algorithm/interval_sum/</guid>
      
        <description>참고 원본 - 바이너리 인덱스 트리 10분 정복 BOJ 2042 구간 합 구하기 문제 Table of Contents  구간 합 문제 풀이1.</description>
      
    </item>
    
    <item>
      <title>A* 알고리즘</title>
      <link>https://JacksonK9.github.io/algorithm/a_star_algorithm/</link>
      <pubDate>Fri, 03 Jun 2022 11:42:01 +0900</pubDate>
      
      <guid>https://JacksonK9.github.io/algorithm/a_star_algorithm/</guid>
      
        <description>원본 링크 - Introduction to the A* Algorithm Table of Contents  개요 지도 표현하기 Graph 탐색 알고리즘 BFS Early Exit Dijkstra Greedy Best First Search A* Algorithm 결론 Review Appendix A - Map to Graph Appendix B - 구현   개요  길 찾기 알고리즘은 꽤나 많은 영역에서 사용됩니다.</description>
      
    </item>
    
    <item>
      <title>2022년도 SAFFY 8기 코딩 테스트 유사 문제</title>
      <link>https://JacksonK9.github.io/algorithm/2022_saffy_similar_problem/</link>
      <pubDate>Wed, 01 Jun 2022 23:51:25 +0900</pubDate>
      
      <guid>https://JacksonK9.github.io/algorithm/2022_saffy_similar_problem/</guid>
      
        <description>Problem  홀짝 칵테일 선수 과목(Prerequisite)  Table of Contents  홀짝 칵테일 문제 설명 홀짝 칵테일 풀이 선수과목 문제 설명 선수과목 풀이 Review   홀짝 칵테일 (BOJ 21312)  문제 내용이 꽤 길다&amp;hellip; 결과적으로 보면 내용은 다음과 같았다 칵테일은 고유 번호의 곱을 의미한다 칵테일(곱셈의 결과)이 짝수보다는 홀수가 맛있다 (홀수 &amp;gt; 짝수) 홀수끼리 또는 짝수끼리는 숫자가 크면 더 맛있다 (큰 수) 정리해보면, 3개의 숫자의 조합된 값의 곱을 이용하여, 홀수 중 제일 큰수, 불가능하면 짝수 중 제일 큰 수를 출력하면 되는 문제  홀짝 칵테일 풀이  홀수 $\times$ 홀수 $=$ 홀수 홀수 $\times$ 짝수 $=$ 짝수 짝수 $\times$ 짝수 $=$ 짝수 위 세 가지 내용을 알고 있는 상태라면 문제가 쉽게 풀린다   3개의 숫자를 받고, 각 값이 홀수인지 짝수인지 확인한다.</description>
      
    </item>
    
    <item>
      <title>벨만포드 알고리즘</title>
      <link>https://JacksonK9.github.io/algorithm/bellman-ford-algorithm/</link>
      <pubDate>Wed, 01 Jun 2022 21:17:10 +0900</pubDate>
      
      <guid>https://JacksonK9.github.io/algorithm/bellman-ford-algorithm/</guid>
      
        <description>참고 원본 - 벨만포드 알고리즘 7분 요약 BOJ 11657 타임머신 문제 Table of Contents  최단 거리 문제 다익스트라 알고리즘 음수 간선 벨만포드 알고리즘 다익스트라 vs 벨만포드 Review   최단 거리 문제  그래프에서 최단 거리를 찾는 문제 일반적으로 최단 거리 문제에서 자주 사용하는 알고리즘은 다익스트라 알고리즘    다익스트라 알고리즘  다익스트라 알고리즘 다이나믹 프로그래밍을 활용하는 알고리즘 특정한 하나의 Node에서 다른 모든 Node로의 최단 거리를 계산하는 알고리즘 각 Node 사이의 Edge가 양수일 때 사용할 수 있음 현실 세계와 잘 맞아 떨어지므로, 현실 세계에 사용하기 적합한 알고리즘   Negative Edge?</description>
      
    </item>
    
    <item>
      <title>개발형 코딩 테스트</title>
      <link>https://JacksonK9.github.io/algorithm/developing_coding_test/</link>
      <pubDate>Thu, 26 May 2022 19:17:16 +0900</pubDate>
      
      <guid>https://JacksonK9.github.io/algorithm/developing_coding_test/</guid>
      
        <description>참고 원본 - 개발형 코딩 테스트 Table of Contents  개발형 코딩 테스트 REST API JSON REST API 연습용 서비스 리뷰   개발형 코딩 테스트?</description>
      
    </item>
    
    <item>
      <title>기타 그래프 이론</title>
      <link>https://JacksonK9.github.io/algorithm/graph_theory/</link>
      <pubDate>Wed, 25 May 2022 22:28:43 +0900</pubDate>
      
      <guid>https://JacksonK9.github.io/algorithm/graph_theory/</guid>
      
        <description>참고 원본 - 기타 그래프 이론 Table of Contents  서로소 집합  서로소 집합의 특징 서로소 집합의 구현 서로소 집합의 활용   최소 신장 트리  최소 신장 트리의 특징 크루스칼 알고리즘   위상 정렬 리뷰  서로소 집합  서로소 집합 $\rightarrow$ 공통 원소가 없는 두 집합을 의미 ({1, 2}, {3, 4} 두 집합은 공통 원소가 없으므로, 서로소 집합)  서로소 집합 자료 구조란?</description>
      
    </item>
    
    <item>
      <title>탐색 알고리즘 (BFS &amp; DFS)</title>
      <link>https://JacksonK9.github.io/algorithm/dfs_bfs/</link>
      <pubDate>Sun, 22 May 2022 20:01:30 +0900</pubDate>
      
      <guid>https://JacksonK9.github.io/algorithm/dfs_bfs/</guid>
      
        <description>참고 원본 - DFS &amp;amp; BFS Table of Contents  탐색 알고리즘이란 스택과 큐 Python의 스택과 큐 C++의 스택과 큐 재귀함수이란 DFS BFS 음료수 얼려먹기 문제 미로 탈출 문제 리뷰   탐색 ?</description>
      
    </item>
    
    <item>
      <title>코딩 테스트 개요 및 파이썬 문법 정리</title>
      <link>https://JacksonK9.github.io/algorithm/what_is_coding_interview_and_python_syntax/</link>
      <pubDate>Sun, 15 May 2022 13:26:57 +0900</pubDate>
      
      <guid>https://JacksonK9.github.io/algorithm/what_is_coding_interview_and_python_syntax/</guid>
      
        <description>참고 원본 - 코딩 테스트 출제 경향 분석 및 파이썬 문법 부수기 Table of Contents  코딩 테스트  코딩 테스트 ?</description>
      
    </item>
    
  </channel>
</rss>